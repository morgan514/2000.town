"""
Django settings for townproj project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import django_heroku 
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
env = environ.Env(
    DEBUG=(bool,False),
    SECRET_KEY=(str,""),
    AWS_KEY=(str,""),
    AWS_SECRET=(str,""),
    AWS_BUCKET=(str,""),
    SENDGRID_API_KEY=(str,""),
    DEFAULT_FROM_EMAIL=(str,"")
)
environ.Env.read_env()

SECRET_KEY=env("SECRET_KEY")
DEBUG=env("DEBUG")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'  
EMAIL_PORT = 465  
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True  
EMAIL_HOST_USER = 'apikey'  
EMAIL_HOST_PASSWORD =env("SENDGRID_API_KEY") 
DEFAULT_FROM_EMAIL=env("DEFAULT_FROM_EMAIL")

PASSWORD_RESET_TEMPLATE_DIR = 'registration/'
PASSWORD_RESET_SUBJECT_TEMPLATE = 'registration/password_reset_subject.txt'
PASSWORD_RESET_MESSAGE_TEMPLATE = 'registration/password_reset_message.txt'


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'townapp.apps.TownappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
   
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'adminsortable2',
    'django_s3_storage',
    'channels',
    'captcha',
    'taggit',
    'colorfield',
    'embed_video'
]

THUMBNAIL_ALIASES = {
    '': {
        'thumbnail': {
            'size': (600, 600),
            'crop': True,
        },
    },
    'gif': {
        'thumbnail': {
            'size': (600, 600),
            'crop': True,
        },
    },
}

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

OPTIMIZED_IMAGE_METHOD = 'pillow'

MARKDOWN_EXTENSIONS = ['']

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'townproj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'townproj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Montreal'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS =  [
    BASE_DIR / "static"
]
MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = '/media/'

DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100 MB
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DEFAULT_FILE_STORAGE="django_s3_storage.storage.S3Storage"
STATICFILES_STORAGE="django_s3_storage.storage.StaticS3Storage"
AWS_REGION="us-east-2"
AWS_ACCESS_KEY_ID=env("AWS_KEY")
AWS_SECRET_ACCESS_KEY=env("AWS_SECRET")
AWS_S3_BUCKET_NAME=env("AWS_BUCKET")
AWS_S3_ADDRESSING_STYLE='path'
AWS_S3_BUCKET_AUTH = False
django_heroku.settings(locals())